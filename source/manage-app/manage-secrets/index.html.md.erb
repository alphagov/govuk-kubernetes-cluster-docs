---
title: Manage secrets in your app
weight: 48
last_reviewed_on: 2022-07-12
review_in: 6 months
---

# Manage secrets in your app

You can add new secrets to your app on the GOV.UK Kubernetes platform.

To do this, you must:

- get access to the AWS Secrets Manager
- create a new secret for your app
- create the secret in AWS Secrets Manager
- define the secret as an environment value within the app

## Get access to the AWS Secrets Manager

To add new secrets to your app, you must have access to the [AWS Secrets Manager](https://aws.amazon.com/secrets-manager/).

[Contact the GOV.UK replatforming team on Slack](https://gds.slack.com/archives/C013F737737) to get access to the AWS Secrets Manager.

## Create a new secret for your app

1. Go to the [`external-secrets` folder in the `govuk-helm-charts` repo](https://github.com/alphagov/govuk-helm-charts/tree/main/charts/govuk-apps-conf/templates/external-secrets).

1. Select your app's folder, or create the folder if necessary.

1. Create a new `.yaml` file with a descriptive name.

1. Enter the secret into the file, using the following format:

    ```
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      name: <APPNAME-SECRETNAME>
      labels:
        {{- include "govuk-apps-conf.labels" . | nindent 4 }}
      annotations:
        kubernetes.io/description: >
          <DESCRIPTION>
    spec:
      refreshInterval: {{ .Values.externalSecrets.refreshInterval }}
      secretStoreRef:
        name: aws-secretsmanager
        kind: ClusterSecretStore
      target:
        name: <APPNAME>
      dataFrom:
        - extract:
            key: govuk/<APPNAME>/<SECRETNAME>
    ```
    Where:
    - `<APPNAME>` is the name of the app
    - `<SECRETNAME>` is the name of the secret
    - `<DESCRIPTION>` is a description of the secret

    For example, to create a secret for the Elections API for the [GOV.UK Frontend app](https://github.com/alphagov/govuk-frontend):

    ```
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      name: frontend-elections-api
      labels:
        {{- include "govuk-apps-conf.labels" . | nindent 4 }}
      annotations:
        kubernetes.io/description: >
          Credentials used by Frontend to access external Elections API service
    spec:
      refreshInterval: {{ .Values.externalSecrets.refreshInterval }}
      secretStoreRef:
        name: aws-secretsmanager
        kind: ClusterSecretStore
      target:
        name: frontend-elections-api
      dataFrom:
        - extract:
            key: govuk/frontend/elections-api
    ```

1. Save the `.yaml` file and merge the change.

## Create the secret in AWS Secrets Manager

How you create a secret depends on the type of secret you are creating.

You can create:

- an AWS managed shared database secret
- a non-database key / value secret

### Create an AWS managed shared database secret

If you selected any of the other options, enter the __Username__ and __Password__, and select the database to connect to.

if you are usuing a shared db / amazon managed db, the password will already exist.  you must put the correct path to yourdatabase


### Create a non-database key / value secret

1. [Sign into the AWS Secrets Manager](https://console.aws.amazon.com/console/home?nc2=h_ct&src=header-signin).

    Make sure you are signing into the environment you want to create the secret in.

1. Select __Store a new secret__.

1. Select the secret type and enter the secret __Key__ and __Value__, and then select __Next__.
    - __Key__ is a unique identifier for the secret
    - __Value__ is the secret you want to store

1. Enter the __Secret name__. You should also enter a __Description__.

    Make sure the description is consistent with the <DESCRIPTION> in the `.yaml` file you created in the previous step.

1. Add a __Tag__. Enter `added-manually` into the __Key__ field, and `true` into the __Value__ field, and select __Next__.

1. Make sure __Automatic rotation__ is not enabled and select __Next__.

1. Review the secret and then select __Store__.

## Define the secret as an environment value within the app

1. Go to the [`argocd-apps` folder in the `govuk-helm-charts` repo](https://github.com/alphagov/govuk-helm-charts/tree/main/charts/argocd-apps).

1. Select the `values-<ENVIRONMENT>.yaml` file that you want. For example, select the `values-integration.yaml` for the integration environment.

1. Find the app that you are adding a secret to, or create the app if necessary.

1. Enter the secret into the file, using the following format:

    ```
    - name: <SECRETNAME>
            valueFrom:
              secretKeyRef:
                name: <APPNAME-SECRETNAME>
                key: <KEY>
    ```

    The `<SECRETNAME>` in this file must match the `<SECRETNAME>` in the `.yaml` file in the [`external-secrets` folder in the `govuk-helm-charts` repo](https://github.com/alphagov/govuk-helm-charts/tree/main/charts/govuk-apps-conf/templates/external-secrets).

    The `<KEY>` must match the __Key__ in the AWS Secrets Manager secret.

    For example, to create a secret called `ELECTIONS_API_KEY` that relates to the `frontend-elections-api` secret in the AWS Secrets Manager (as per the previous example):

    ```
    - name: ELECTIONS_API_KEY
            valueFrom:
              secretKeyRef:
                name: frontend-elections-api
                key: key
    ```

1. Save the `.yaml` file and merge the change.

## Supporting information

The GOV.UK Kubernetes platform uses the [External Secrets Operator](https://external-secrets.io/) to manage secrets.

The operator reads information from external APIs and automatically injects the information values into a Kubernetes secret.

For more information, see the:

- [External Secrets Operator documentation](https://external-secrets.io/v0.5.8/guides-introduction/)
- [External Secrets Operator GitHub repository](https://github.com/external-secrets/external-secrets)
