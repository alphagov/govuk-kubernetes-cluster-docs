---
title: Debug your app
weight: 51
last_reviewed_on: 2022-08-01
review_in: 6 months
---

# Debug your app

Generally, the reasons why an app has functional and/or performance issues belong to the following categories:

- the app's functional configuration is wrong
- the app does not have enough resources allocated
- the app does not have access to required AWS services
- the GOV.UK Kubernetes platform is malfunctioning

The following content summarises how to debug your app's performance issues in each of these categories.

## Fixing an app's incorrect functional configuration

Almost all GOV.UK apps are configured through environment variables. These environment variables are:

- either in plain text or a [Kubernetes secret](https://kubernetes.io/docs/concepts/configuration/secret/)
- located in the `values-<ENVIRONMENT>.yaml` file in the [`govuk-helm-charts` repo](https://github.com/alphagov/govuk-helm-charts)

For example, the [`values-integration.yaml` file in the `govuk-helm-charts` repo](https://github.com/alphagov/govuk-helm-charts/blob/main/charts/argocd-apps/values-integration.yaml) contains the environment variables for the integration environment.

You can check that you have set up your app's environment variables correctly by running the following in the command line:

```sh
kubectl -n apps exec -it deploy/<APPNAME> -c app bash
env
```

If an environment variable is not configured correctly, you must correct it. You can change a plain text environment variable directly in the `values-<ENVIRONMENT>.yaml` file.

To change an app's Kubernetes secret, see the [Add secrets to your app documentation](https://govuk-k8s-user-docs.publishing.service.gov.uk/manage-app/manage-secrets).

When you change an app's Kubernetes secret, you must restart the app. Run the following in the command line to restart your app:

```sh
kubectl -n apps rollout restart deploy/<APPNAME>
```

## Allocating more resources to an app

An app's pod or container can crash because of insufficient resources such as CPU and memory.

You can check why a container or pod has crashed by running `describe pods` in the command line:

```sh
kubectl -n apps describe pods -l=app=<APPNAME>
```

If the pod or container has crashed because of insufficient resources, you should [scale your app's resources](https://govuk-k8s-user-docs.publishing.service.gov.uk/manage-app/scale-app/).

You can monitor the pod resource usage of an app in the `General/Kubernetes/Compute Resources/Pod` Grafana dashboard for the appropriate environment.

For example, you can monitor the [Grafana dashboard for the GOV.UK integration environment](https://grafana.eks.integration.govuk.digital/).

For more information on Grafana, see the [Grafana developer documentation](https://docs.publishing.service.gov.uk/manual/grafana.html).

## Giving an app access to required AWS services

Some apps need access to other AWS services to work, but those AWS services are protected at a network level by [security groups](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html).

To fix this issue, you must make sure that the security groups of these services are open to the [Kubernetes worker nodes](https://kubernetes.io/docs/concepts/architecture/nodes/) where the app is running.

To do this, you must make terraform changes to the [`security.tf` file in the `govuk-infrastructure` repo](https://github.com/alphagov/govuk-infrastructure/blob/main/terraform/deployments/govuk-publishing-infrastructure/security.tf).

Use this [example pull request in the `govuk-infrastructure` repo](https://github.com/alphagov/govuk-infrastructure/pull/584/files) as a guide to making the necessary changes.

Once you have made these changes, apply them by [deploying the `cluster-infrastructure` module](https://govuk-k8s-user-docs.publishing.service.gov.uk/manage-app/create-new-env/#2-deploy-the-cluster-infrastructure-module).

## Fixing the malfunctioning GOV.UK Kubernetes platform

An app may face issues if the platform malfunctions. This could happen for multiple reasons, for example:

- there may not be enough worker nodes to schedule the required number of replicas of the apps
- the app may not be running the right image version

If the platform is malfunctioning, you must [contact the GOV.UK replatforming team on Slack](https://gds.slack.com/archives/C013F737737) to ask for help.

## General debugging

### Getting logs for your apps

You can get logs for your apps by following the [viewing app logs documentation](/manage-app/get-app-info/#view-app-logs).

### Creating a shell inside a running container

If you cannot diagnose an issue by looking at the app logs, you can create a shell to run commands inside a running app container.

Run the following in the command line:

```
kubectl -n <NAMESPACE> exec -it <POD> sh -c <CONTAINER>
```

If you do not specify the container, the command creates a shell inside the first container in the app manifest.

For more information, see the [Kubernetes documentation on getting a shell to a running container](https://kubernetes.io/docs/tasks/debug-application-cluster/get-shell-running-container/).

### Port-forwarding to a pod

You can make a port available on your local machine to send commands direct to the app from your local machine.

This command works on a pod level rather than a container level, as everything in a pod has the same IP address.

For example, to forward port `5000` on `localhost` to port `5001` in a pod, run:

```
kubectl -n <namespace> port-forward <pod> 5000:5001
```

You can find the pod port in the app configuration.

### Following a troubleshooting guide

Follow this [visual guide on troubleshooting Kubernetes deployments](https://learnk8s.io/troubleshooting-deployments) to help diagnose issues.
